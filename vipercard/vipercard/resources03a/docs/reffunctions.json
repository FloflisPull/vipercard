{"name": "Functions", "entries": [{"title": "abs", "body": "\u0002times_24_biuosdce\u0002abs(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Absolute value.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput abs(-0.5) into x\nput abs(0.5) into x"}, {"title": "atan", "body": "\u0002times_24_biuosdce\u0002atan(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Arctangent, in radians.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput atan(0.5) into x"}, {"title": "charToNum", "body": "\u0002times_24_biuosdce\u0002charToNum(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002From ascii-like number to a character.\nNote that characters in a field are displayed in Mac OS Roman\nencoding.\n\nNote that the newline character is always \\n (10).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput charToNum(97) into x"}, {"title": "clickh", "body": "\u0002times_24_biuosdce\u0002clickh()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In a mousedown or mouseup handler, get click x coordinate.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput clickh() into x"}, {"title": "clickloc", "body": "\u0002times_24_biuosdce\u0002clickloc()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In a mousedown or mouseup handler, get click x,y coordinates.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput clickloc() into x"}, {"title": "clickv", "body": "\u0002times_24_biuosdce\u0002clickv()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In a mousedown or mouseup handler, get click y coordinate.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput clickv() into x"}, {"title": "commandKey", "body": "\u0002times_24_biuosdce\u0002commandKey()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In an afterkeydown or afterkeyup handler, check if this modifier \nkey is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput commandKey() into x\n\nput cmdkey() into x -- same as above."}, {"title": "contains", "body": "\u0002times_24_biuosdce\u0002contains\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nif \"abc\" contains \"b\" then\n    answer \"yes\"\nend if"}, {"title": "cos", "body": "\u0002times_24_biuosdce\u0002cos(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput cos(0.5) into x"}, {"title": "diskSpace", "body": "\u0002times_24_biuosdce\u0002diskSpace()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002(Deprecated and hard-coded).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput diskSpace() into x"}, {"title": "exp", "body": "\u0002times_24_biuosdce\u0002exp(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002e to the power of x.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput exp(0.5) into x"}, {"title": "exp1", "body": "\u0002times_24_biuosdce\u0002exp1(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002(e to the power of x) minus 1.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput exp1(0.5) into x"}, {"title": "exp2", "body": "\u0002times_24_biuosdce\u0002exp2(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u00022 to the power of x.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput exp2(0.5) into x"}, {"title": "heapSpace", "body": "\u0002times_24_biuosdce\u0002heapSpace()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002(Deprecated and hard-coded).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput heapSpace() into x"}, {"title": "is a", "body": "\u0002times_24_biuosdce\u0002is a\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Check the type of an expression.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nif x is a number then\n    answer \"a\"\nend if\nif x is a integer then\n    answer \"b\"\nend if\nif x is a logical then\n    answer \"c\"\nend if\nif x is a point then\n    answer \"d\"\nend if\nif x is a rect then\n    answer \"e\"\nend if"}, {"title": "is in", "body": "\u0002times_24_biuosdce\u0002is in\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nif \"b\" is in \"abc\" then\n    answer \"yes\"\nend if"}, {"title": "is within", "body": "\u0002times_24_biuosdce\u0002is within\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Same as \"is in\".\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nif \"b\" is in \"abc\" then\n    answer \"yes\"\nend if"}, {"title": "keyChar", "body": "\u0002times_24_biuosdce\u0002keyChar()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In an afterkeydown or afterkeyup handler, check the character.\nIs affected by shift.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput keyChar() into x\non afterKeyDown\n    if keyChar() is \"i\" and not shiftKey() and \\\n            optionKey() and not commandKey() then\n        answer \"you pressed option-i\"\n    else if keyChar() is \"U\" and shiftKey() and \\\n            not optionKey() and not commandKey() then\n        answer \"you pressed shift-u\"\n    end if\nend afterKeyDown"}, {"title": "keyRepeated", "body": "\u0002times_24_biuosdce\u0002keyRepeated()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In an afterkeydown handler, did this event come from the user holding the key down?\nExamples:\n\u0002monaco_9_biuosdce\u0002\nif not keyRepeated() then\n    add 1 to uniqueKeyPresses\nend if"}, {"title": "length", "body": "\u0002times_24_biuosdce\u0002length(s)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Returns the length of a string, in characters.\nAlso supports alternate syntax 'the length of \"abc\"'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nanswer length(\"abc\") -- displays 3\nanswer the length of \"\" -- displays 0\nanswer the length of \"abc\" -- displays 3"}, {"title": "ln", "body": "\u0002times_24_biuosdce\u0002ln(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput ln(0.5) into x"}, {"title": "ln1", "body": "\u0002times_24_biuosdce\u0002ln1(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Natural logarithm of (x + 1)\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput ln1(0.5) into x"}, {"title": "log2", "body": "\u0002times_24_biuosdce\u0002log2(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput log2(0.5) into x"}, {"title": "max", "body": "\u0002times_24_biuosdce\u0002max(...)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Supports any number of arguments.\nYou can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput max(1,2,3) into x\nput max(\"45,49,40\") into x -- returns 49"}, {"title": "me", "body": "\u0002times_24_biuosdce\u0002me\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Refers to the object that owns the current script.\n\nSimilar to, but distinct from 'target'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput the id of me into theTarget\n\nset the width of me to 100"}, {"title": "min", "body": "\u0002times_24_biuosdce\u0002min()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Supports any number of arguments.\nYou can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput min(1,2,3) into x\nput min(\"45,49,40\") into x -- returns 40"}, {"title": "mouse", "body": "\u0002times_24_biuosdce\u0002mouse()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Is the mouse button currently down.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput mouse() into x"}, {"title": "mouseclick", "body": "\u0002times_24_biuosdce\u0002mouseclick()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Are we currently handling a mousedown or mouseup event.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput mouseclick() into x"}, {"title": "mouseh", "body": "\u0002times_24_biuosdce\u0002mouseh()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The x coordinate of mouse location.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput mouseh() into x"}, {"title": "mouseloc", "body": "\u0002times_24_biuosdce\u0002mouseloc()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The coordinates of mouse location.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput mouseloc() into x"}, {"title": "mousev", "body": "\u0002times_24_biuosdce\u0002mousev()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The y coordinate of mouse location.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput mousev() into x"}, {"title": "numToChar", "body": "\u0002times_24_biuosdce\u0002numToChar(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002From a character to an ascii-like number.\nNote that characters in a field are displayed in Mac OS Roman\nencoding.\n\nNote that the newline character is always \\n (10).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput numToChar(\"a\") into x"}, {"title": "number", "body": "\u0002times_24_biuosdce\u0002number\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Can be used to either count number of objects, or to count\nlines/items in a string.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nanswer the number of chars in \"1,2,3\"\nanswer the number of items in \"1,2,3\"\nanswer the number of words in \"1,2,3\"\nanswer the number of lines in \"1,2,3\"\nanswer the number of cards\nanswer the number of card buttons\nanswer the number of card fields"}, {"title": "numberToStr", "body": "\u0002times_24_biuosdce\u0002numberToStr(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Convert number to string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput numberToStr(0.5) into x"}, {"title": "offset", "body": "\u0002times_24_biuosdce\u0002offset(needle, haystack)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Search for a string within a string, and return the position where found.\nIf not found, returns 0.\n(one-based indexing).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput offset(\"b\", \"abc\") into x\n-- x is now 2."}, {"title": "optionKey", "body": "\u0002times_24_biuosdce\u0002optionKey()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In an afterkeydown or afterkeyup handler, check if this modifier \nkey is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput optionKey() into x"}, {"title": "param", "body": "\u0002times_24_biuosdce\u0002param(n)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Get the nth value passed into the current procedure. Can be used\nto build a function that takes any number of arguments, \nsee example.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\non mySumOfNumbers\n    put 0 into total\n    repeat with x = 1 to paramCount()\n        put total + param(x) into total\n    end repeat\n    answer \"total is\" && total\nend mySumOfNumbers\n\non mouseUp\n    mySumOfNumbers 1, 2, 3\nend mouseUp"}, {"title": "paramCount", "body": "\u0002times_24_biuosdce\u0002paramCount()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Get the number of values passed into the current procedure.\nCan be used to build a function that takes any number of \narguments, see example.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\non mySumOfNumbers\n    put 0 into total\n    repeat with x = 1 to paramCount()\n        put total + param(x) into total\n    end repeat\n    answer \"total is\" && total\nend mySumOfNumbers\n\non mouseUp\n    mySumOfNumbers 1, 2, 3\nend mouseUp"}, {"title": "params", "body": "\u0002times_24_biuosdce\u0002params()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Get all of the values passed into the current procedure.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput params() into x"}, {"title": "random", "body": "\u0002times_24_biuosdce\u0002random(n)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002n must be an integer.\nReturns random value between 1 and n.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput random(20) into roll"}, {"title": "result", "body": "\u0002times_24_biuosdce\u0002result()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The return value of the last called function or procedure.\nExamples:\n\u0002monaco_9_biuosdce\u0002\non myProc\n    return \"a\"\nend myProc\non mouseUp\n    myProc\n    answer result()\nend mouseUp"}, {"title": "round", "body": "\u0002times_24_biuosdce\u0002round(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Returns integer nearest to number. Odd integers plus 0.5 \nround up, even integers plus 0.5 round down.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput round(1.7) into x"}, {"title": "screenRect", "body": "\u0002times_24_biuosdce\u0002screenRect()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput screenRect() into x"}, {"title": "seconds", "body": "\u0002times_24_biuosdce\u0002seconds()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Seconds since January 1, 1904.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput seconds() into x"}, {"title": "selectedChunk", "body": "\u0002times_24_biuosdce\u0002selectedChunk()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Current selection, looks something like 'char 2 to 4 of cd fld id \n1234'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput selectedChunk() into x"}, {"title": "selectedField", "body": "\u0002times_24_biuosdce\u0002selectedField()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The field that contains current selected text, looks something \nlike 'cd fld id 1234'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput selectedField() into x"}, {"title": "selectedLine", "body": "\u0002times_24_biuosdce\u0002selectedLine()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The number of the line of the current selected text.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput selectedLine() into x"}, {"title": "selectedText", "body": "\u0002times_24_biuosdce\u0002selectedText()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The value of the current selected text.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput selectedText() into x"}, {"title": "shiftKey", "body": "\u0002times_24_biuosdce\u0002shiftKey()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002In an afterkeydown or afterkeyup handler, check if this modifier \nkey is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput shiftKey() into x"}, {"title": "sin", "body": "\u0002times_24_biuosdce\u0002sin(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput sin(0.5) into x"}, {"title": "sqrt", "body": "\u0002times_24_biuosdce\u0002sqrt(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput sqrt(0.5) into x"}, {"title": "stackSpace", "body": "\u0002times_24_biuosdce\u0002stackSpace()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002(Deprecated and hard-coded).\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput stackSpace() into x"}, {"title": "strToNumber", "body": "\u0002times_24_biuosdce\u0002strToNumber(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Parse string to number.\nSupports scientific notation.\nIf cannot be parsed, returns \"false\"\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput strToNumber(\"12\") into x\nput strToNumber(\"-12\") into x\nput strToNumber(\"1e6\") into x"}, {"title": "sum", "body": "\u0002times_24_biuosdce\u0002sum()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Supports any number of arguments.\nYou can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput sum(1,2,3) into x\nput sum(\"1,2,3\") into x -- returns 6"}, {"title": "systemVersion", "body": "\u0002times_24_biuosdce\u0002systemVersion()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002(Deprecated and hard-coded).\nTo get the current software version, use\nput the version into x\nor\nput the long version into x\ninstead.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput systemVersion() into x"}, {"title": "tan", "body": "\u0002times_24_biuosdce\u0002tan(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput tan(0.5) into x"}, {"title": "target", "body": "\u0002times_24_biuosdce\u0002target\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Refers to the object that was most recently acted on.\nHere's one reason why this can be useful:\nIf you have many buttons that all basically perform the same \naction, you could have an 'on mouseup' handler in the card script\ninstead of a separate script within each button. This script in the\ncard could check the target to see which, if any, of the buttons\nwere clicked.\n\nSimilar to, but distinct from 'me'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput the id of target into theTarget\n\nset the width of the target to 100"}, {"title": "there is a", "body": "\u0002times_24_biuosdce\u0002there is a\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Check for the existence of an object\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nif there is a cd btn id 12345 then\n    answer \"found\"\nend if"}, {"title": "ticks", "body": "\u0002times_24_biuosdce\u0002ticks()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Ticks (60th of a second) since January 1, 1904.\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput ticks() into x"}, {"title": "tool", "body": "\u0002times_24_biuosdce\u0002tool()\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The current tool, as set by the \u0002monaco_9_biuosdce\u0002choose\u0002times_12_biuosdce\u0002 command. (The \u0002monaco_9_biuosdce\u0002choose\u0002times_12_biuosdce\u0002 command can be used to draw lines and shapes).\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nchoose pencil tool\nanswer tool() -- shows \"pencil\""}, {"title": "trunc", "body": "\u0002times_24_biuosdce\u0002trunc(x)\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Get integer part of a number.\ni.e. for positive numbers, always round down to the nearest \ninteger.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput trunc(0.5) into x"}]}
