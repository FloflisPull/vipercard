{"name": "lngFunctions", "entries": [{"title": "abs(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002abs(x)\u0002times_12_biuosdce\u0002\n\n\nAbsolute value.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput abs(-0.5) into x\nput abs(0.5) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "atan(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002atan(x)\u0002times_12_biuosdce\u0002\n\n\n\nArctangent, in radians.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput atan(0.5) into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "average()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002average()\u0002times_12_biuosdce\u0002\n\n\nSimple mean of numbers.\nSupports any number of arguments.\nYou can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput average(1,2,3) into x\nput average(\"1,2,3\") into x -- returns 2\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "charToNum(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002charToNum(x)\u0002times_12_biuosdce\u0002\n\n\nFrom ascii-like number to a character. Note that characters in a field are displayed in Mac OS Roman encoding.\n\nNote that the newline character is always \\n (10).\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput charToNum(97) into x\n\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "clickH()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002clickH()\u0002times_12_biuosdce\u0002\n\n\nGet x coordinate of a recent mouse click. See \u0002monaco_9_biuosdce\u0002clickLoc\u0002times_12_biuosdce\u0002 for more details.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput clickh() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "clickLoc()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002clickLoc()\u0002times_12_biuosdce\u0002\n\nGet the coordinates of a recent mouse click.\n\nThis isn't necessarily the most recent mouseClick, it is only updated \n1) clicks before the script runs\n2) when you check the \u0002monaco_9_biuosdce\u0002mouseClick\u0002times_12_biuosdce\u0002\n3) when you simulate a click with \u0002monaco_9_biuosdce\u0002click\u0002times_12_biuosdce\u0002 or \u0002monaco_9_biuosdce\u0002drag\u0002times_12_biuosdce\u0002\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nwait until the mouseClic\nanswer \"you clicked at\" && the clickLoc\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "clickV()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002clickV()\u0002times_12_biuosdce\u0002\n\n\nGet y coordinate of a recent mouse click. See \u0002monaco_9_biuosdce\u0002clickLoc\u0002times_12_biuosdce\u0002 for more details.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput clickv() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "commandKey()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002commandKey()\u0002times_12_biuosdce\u0002\n\n\nCheck if this modifier key is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif the commandKey is down then\n    answer \"cmd key is down\"\nend if\n-- same as\nif the cmdKey is down then\n    answer \"cmd key is down\"\nend if\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "contains", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002contains\u0002times_12_biuosdce\u0002\n\n\nCan you find a string within a string?\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif \"abc\" contains \"b\" then\n    answer \"yes\"\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "cos(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002cos(x)\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput cos(0.5 * pi) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "date()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002date()\u0002times_12_biuosdce\u0002\n\n\n\nReturns the current date.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nthe date\ndate()\nthe abbrev date\nthe short date\nthe long date\nthe English date\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "exp(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002exp(x)\u0002times_12_biuosdce\u0002\n\n\ne to the power of x.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput exp(0.5) into x\n\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "exp2(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002exp2(x)\u0002times_12_biuosdce\u0002\n\n\n2 to the power of x.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput exp2(0.5) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "is a", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002is a\u0002times_12_biuosdce\u0002\n\n\nCheck the type of an expression.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif x is a number then\n    answer \"a\"\nend if\nif x is a integer then\n    answer \"b\"\nend if\nif x is a logical then\n    answer \"c\"\nend if\nif x is a point then\n    answer \"d\"\nend if\nif x is a rect then\n    answer \"e\"\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "is in", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002is in\u0002times_12_biuosdce\u0002\n\n\nCan you find a string within a string?\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif \"b\" is in \"abc\" then\n    answer \"yes\"\nend if\n\n-- is within is the same,\nif \"b\" is within \"abc\" then\n    answer \"yes\"\nend if\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "keyChar()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002keyChar()\u0002times_12_biuosdce\u0002\n\n\nIn an afterkeydown or afterkeyup handler, check the character. Is affected by shift.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput keyChar() into x\non afterKeyDown\n    if keyChar() is \"i\" and the shiftKey is up and \\\n            the optionKey is down and the commandKey is up then\n        answer \"you pressed option-i\"\n    else if keyChar() is \"U\" and the shiftKey is down and \\\n            the optionKey is up and the commandKey is up then\n        answer \"you pressed shift-u\"\n    end if\nend afterKeyDown\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "keyRepeated()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002keyRepeated()\u0002times_12_biuosdce\u0002\n\n\nIn an afterkeydown handler, did this event come from the user holding the key down?\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif not keyRepeated() then\n    add 1 to uniqueKeyPresses\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "length(s)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002length(s)\u0002times_12_biuosdce\u0002\n\n\nReturns the length of a string, in characters.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nanswer length(\"abc\") -- displays 3\nanswer the length of \"\" -- displays 0\nanswer the length of \"abc\" -- displays 3\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "ln(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002ln(x)\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput ln(0.5) into x\n\n\n\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "log2(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002log2(x)\u0002times_12_biuosdce\u0002\n\n\nBase-2 logarithm.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput log2(0.5) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "max(...)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002max(...)\u0002times_12_biuosdce\u0002\n\n\nSupports any number of arguments. You can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput max(1,2,3) into x\nput max(\"45,49,40\") into x -- returns 49\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "me", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002me\u0002times_12_biuosdce\u0002\n\n\nRefers to the object that owns the current script.\n\nSimilar to, but distinct from 'target'.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput the id of me into theTarget\n\nset the width of me to 100\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "min()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002min()\u0002times_12_biuosdce\u0002\n\n\nSupports any number of arguments. You can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput min(1,2,3) into x\nput min(\"45,49,40\") into x -- returns 40\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "mouse()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002mouse()\u0002times_12_biuosdce\u0002\n\n\nIs the mouse button currently down. Returns one of the constants \u0002monaco_9_biuosdce\u0002down\u0002times_12_biuosdce\u0002 or \u0002monaco_9_biuosdce\u0002up\u0002times_12_biuosdce\u0002.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif the mouse is down then\n    answer \"mouse button is clicked\"\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "mouseClick()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002mouseClick()\u0002times_12_biuosdce\u0002\n\n\nWas the mouse recently clicked? Doesn't include the click that created the message, it needs to be later.\n\nWhen you check the mouseClick, it will only return true once before resetting back to false. See also: clickloc, clickh, clickv.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nwait until the mouseClick\nanswer the clickloc\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "mouseH()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002mouseH()\u0002times_12_biuosdce\u0002\n\n\nThe x coordinate of the current mouse location.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput mouseH() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "mouseLoc()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002mouseLoc()\u0002times_12_biuosdce\u0002\n\n\nThe coordinates of the current mouse location.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput mouseLoc() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "mouseV()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002mouseV()\u0002times_12_biuosdce\u0002\n\n\nThe y coordinate of the current mouse location.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput mouseV() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "number", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002number\u0002times_12_biuosdce\u0002\n\n\n\u0002times_12_+biuosdce\u0002Count parts of text\u0002times_12_biuosdce\u0002\n\u0002monaco_9_biuosdce\u0002answer the number of chars in \"abc\"\nanswer the number of items in \"a,b,c\"\nanswer the number of lines in myList\u0002times_12_biuosdce\u0002\n\n\u0002times_12_+biuosdce\u0002Count current objects\u0002times_12_biuosdce\u0002\n\u0002monaco_9_biuosdce\u0002answer the number of cards in this stack\nanswer the number of buttons in this card\nanswer the number of fields in this card\nrepeat with x = 1 to the number of cards in this stack\n    set the name of card x of this stack to \"c\" & x\nend repeat\u0002times_12_biuosdce\u0002\n\n\u0002times_12_+biuosdce\u0002Get the number of an object.\u0002times_12_biuosdce\u0002\n\u0002monaco_9_biuosdce\u0002answer the number of this card\nput the number of cd fld id 1234 into x\nput \"abc\" into cd fld x\u0002times_12_biuosdce\u0002\n"}, {"title": "numberToStr(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002numberToStr(x)\u0002times_12_biuosdce\u0002\n\n\nConvert number to string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput numberToStr(0.5) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "numToChar(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002numToChar(x)\u0002times_12_biuosdce\u0002\n\n\nFrom a character to an ascii-like number. Note that characters in a field are displayed in Mac OS Roman encoding.\n\nNote that the newline character is always \\n (10).\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput numToChar(\"a\") into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "objectById(id)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002objectById(id)\u0002times_12_biuosdce\u0002\n\n\nGets the full id from the numeric id.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\n-- assuming there is a cd btn id 1234\nput objectById(1234) into x\n-- x is now \"card button id 1234\".\n-- you can now do this\nset the topleft of x to 100, 200\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "offset(needle, haystack)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002offset(needle, haystack)\u0002times_12_biuosdce\u0002\n\n\nSearch for a string within a string, and return the position where found. If not found, returns 0. (one-based indexing).\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput offset(\"b\", \"abc\") into x\n-- x is now 2.\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "optionKey()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002optionKey()\u0002times_12_biuosdce\u0002\n\n\nCheck if this modifier key is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif the optionKey is down then\n    answer \"opt key is down\"\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "param(n)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002param(n)\u0002times_12_biuosdce\u0002\n\n\nGet the nth value passed into the current procedure. Can be used to build a function that takes any number of arguments,  see example.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\non mySumOfNumbers\n    put 0 into total\n    repeat with x = 1 to paramCount()\n        put total + param(x) into total\n    end repeat\n    answer \"total is\" && total\nend mySumOfNumbers\n\non mouseUp\n    mySumOfNumbers 1, 2, 3\nend mouseUp\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "paramCount()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002paramCount()\u0002times_12_biuosdce\u0002\n\n\nGet the number of values passed into the current procedure. Can be used to build a function that takes any number of arguments, see example.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\non mySumOfNumbers\n    put 0 into total\n    repeat with x = 1 to paramCount()\n        put total + param(x) into total\n    end repeat\n    answer \"total is\" && total\nend mySumOfNumbers\n\non mouseUp\n    mySumOfNumbers 1, 2, 3\nend mouseUp\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "params()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002params()\u0002times_12_biuosdce\u0002\n\n\nGet all of the values passed into the current procedure.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput params() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "random(n)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002random(n)\u0002times_12_biuosdce\u0002\n\n\nn must be an integer.\nReturns random value between 1 and n.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput random(20) into roll\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "result()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002result()\u0002times_12_biuosdce\u0002\n\n\nThe return value of the last called function or procedure.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\non myProc\n    return \"a\"\nend myProc\non mouseUp\n    myProc\n    answer the result\nend mouseUp\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "round(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002round(x)\u0002times_12_biuosdce\u0002\n\n\nReturns integer nearest to number. Odd integers plus 0.5 round up, even integers plus 0.5 round down.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput round(1.7) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "screenRect()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002screenRect()\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput screenRect() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "seconds()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002seconds()\u0002times_12_biuosdce\u0002\n\n\nSeconds since January 1, 1904.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput seconds() into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "selectedChunk()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002selectedChunk()\u0002times_12_biuosdce\u0002\n\n\nA full description of the current selection, or \"\" if there is no selection.\n\nReturns a string that looks like this: \u0002monaco_9_biuosdce\u0002char 2 to 4 of cd fld id 567\u0002times_12_biuosdce\u0002.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nset the textSize of the selectedChunk to 24\nput the textFont of the selectedChunk into x\nput word 2 of the selectedChunk into selStart \nput word 4 of the selectedChunk into selEnd \nput the selectedChunk into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "selectedField()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002selectedField()\u0002times_12_biuosdce\u0002\n\n\nThe field that contains current selected text, or \"\" if there is no selection.\n(If compatibility mode is enabled, not recommended for new code, uses HyperCard's formatting and returns a string like\n\"card field 4\".)\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput selectedField() into x\nset the loc of the selectedField to 23, 45\nset the textalign of the selectedField to \"center\"\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "selectedLine()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002selectedLine()\u0002times_12_biuosdce\u0002\n\n\nThe number of the line of the current selected text, or \"\" if there is no selection.\n(If compatibility mode is enabled, not recommended for new code, uses HyperCard's formatting and returns a string like\n\"line 3 of card field 4\".)\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput selectedLine() into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "selectedText()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002selectedText()\u0002times_12_biuosdce\u0002\n\n\nThe value of the current selected text, or the empty string if there is no selection.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput selectedText() into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "the selection", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002the selection\u0002times_12_biuosdce\u0002\n\n\nReading from \u0002monaco_9_biuosdce\u0002the selection\u0002times_12_biuosdce\u0002 retrieves the value of the current selected text, or the empty string if there is no selection.\n\nWriting to \u0002monaco_9_biuosdce\u0002the selection\u0002times_12_biuosdce\u0002 replaces the currently selected text with new text.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput the selection into x\nput \"\" into the selection\nput \"abc\" into the selection\n\n-- chunks are supported\nput char 2 to 3 of the selection into x\nput \"\" into char 2 to 3 of the selection\nput \"abc\" into char 3 of the selection\nput item 2 to 3 of the selection into x\nput \"\" into item 2 to 3 of the selection\nput \"abc\" into item 3 of the selection\n\n-- you can delete part of the selection\ndelete char 2 to 4 of the selection\ndelete item 3 of the selection\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "shiftKey()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002shiftKey()\u0002times_12_biuosdce\u0002\n\n\nCheck if this modifier key is pressed.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif the shiftKey is down then\n    answer \"shift key is down\"\nend if\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "sqrt(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002sqrt(x)\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput sqrt(0.5) into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "sin(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002sin(x)\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput sin(0.5 * pi) into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "strToNumber(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002strToNumber(x)\u0002times_12_biuosdce\u0002\n\n\nParse string to number. Supports scientific notation. If cannot be parsed, returns \"false\"\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput strToNumber(\"12\") into x\nput strToNumber(\"-12\") into x\nput strToNumber(\"1e6\") into x\nask \"what is a number\"\nput it into x\nif strToNumber(x) is false then\n    answer \"that was not a number\"\nend if\n\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "sum()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002sum()\u0002times_12_biuosdce\u0002\n\n\n\nSupports any number of arguments.\nYou can also provide a comma-delimited string.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput sum(1,2,3) into x\nput sum(\"1,2,3\") into x -- returns 6\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "tan(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002tan(x)\u0002times_12_biuosdce\u0002\n\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput tan(0.125 * pi) into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "target", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002target\u0002times_12_biuosdce\u0002\n\n\nRefers to the object that was most recently acted on.\n\nHere's one way this can be useful: If you have many buttons that all basically perform the same action, you could have an 'on mouseup' handler in the card script instead of a separate script within each button. This script in the card could check the target to see which of the buttons were clicked.\n\nDifferent than 'me', which is the owner of the currently running script, which might be different than the button that was clicked.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nset the width of the target to 100\n\nput the short id of the target into x\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "there is a", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002there is a\u0002times_12_biuosdce\u0002\n\n\nCheck for the existence of an object.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nif there is a cd btn id 12345 then\n    answer \"found\"\nend if\nif there is not a cd btn id 12345 then\n    answer \"not found\"\nend if\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "ticks()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002ticks()\u0002times_12_biuosdce\u0002\n\n\nTicks (60th of a second) since January 1, 1904.\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput ticks() into x\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "tool()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002tool()\u0002times_12_biuosdce\u0002\n\n\nThe current simulated tool, as set by the \u0002monaco_9_biuosdce\u0002choose\u0002times_12_biuosdce\u0002 command. (The \u0002monaco_9_biuosdce\u0002choose\u0002times_12_biuosdce\u0002 command can be used to draw lines and shapes).\n\nThe actual current tool will be the browse tool when any script is running.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nchoose pencil tool\nanswer tool() -- shows \"pencil\"\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "toLowerCase()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002toLowerCase()\u0002times_12_biuosdce\u0002\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nanswer toLowerCase(\"ABC\") -- shows \"abc\"\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "toUpperCase()", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002toUpperCase()\u0002times_12_biuosdce\u0002\n\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nanswer toUpperCase(\"abc\") -- shows \"ABC\"\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "trunc(x)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002trunc(x)\u0002times_12_biuosdce\u0002\n\n\nGet integer part of a number. i.e. for positive numbers, always round down to the nearest integer.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n\nput trunc(0.5) into x\n\n\n\n\u0002times_12_biuosdce\u0002\n"}, {"title": "annuity(rate, periods)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002annuity(rate, periods)\u0002times_12_biuosdce\u0002\n\n\nComputes the total cost of an annuity now that will pay you one unit per period, over the specific number of periods.\n\nYou want to purchase an annuity that pays you $10,000 a year for 10 years. The interest rate is 10%. How much will it cost you now? The amount loaned is 10000 * annuity(0.10, 10), or 61445.67.\n"}, {"title": "compound(rate, periods)", "body": "\u0002times_12_biuosdce\u0002\u0002times_24_biuosdce\u0002compound(rate, periods)\u0002times_12_biuosdce\u0002\n\n\n\nReturns the value of one unit of principal invested at the interest rate and compounded over the specified number of periods.\n\nExample: $100 invested for 20 years at 10% interest compounded yearly:\n\nfutureValue = 100 * compound(0.10, 20) = about $673\n"}]}