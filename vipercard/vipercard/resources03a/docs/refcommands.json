{"name": "Commands", "entries": [{"title": "add", "body": "\u0002times_24_biuosdce\u0002add {number} to [chunk of] {container}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Adds the value of number to the number in a container.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput 2 into x\nadd 3 to x\nanswer x -- will display \"5\"\n\nput \"1,2,3\" into x\nadd 3 to item 2 of x\nanswer x -- will display \"1,5,3\""}, {"title": "answer", "body": "\u0002times_24_biuosdce\u0002answer {text}\nanswer {text} with {option1} or {option2} [or {option3}]\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Displays a dialog box.\nThe button that is pressed (1, 2, or 3) will be assigned to the variable \"it\".\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nanswer \"abc\" -- will display \"abc\"\n\nanswer \"are you sure?\" with \"OK\" or \"cancel\" \nput it into whichChosen\nif whichChosen is 1 then\n    answer \"clicked OK\"\nelse if whichChosen is 2 then\n    answer \"clicked cancel\"\nend if"}, {"title": "ask", "body": "\u0002times_24_biuosdce\u0002ask {text}\nask {text} with {defaulttext}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Displays a dialog box allowing the user to type in a response.\nThe text typed will be assigned to the variable \"it\".\nIf the user clicks Cancel, the result will be an empty string \"\".\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nask \"what is your favorite color?\" with \"blue\"\nput it into favColor\nanswer \"you chose\" && favColor"}, {"title": "beep", "body": "\u0002times_24_biuosdce\u0002beep\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Play the system beep sound."}, {"title": "choose", "body": "\u0002times_24_biuosdce\u0002choose {toolname} tool\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002You can use the choose command to programmatically draw shapes and lines.\n\nWhen a script completes, you'll be taken back to the Browse tool regardless of which tool was chosen within a script.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nchoose pencil tool\nclick at 10,20\n-- this draws a black pixel at the coordinates x=10, y=20\n\nchoose line tool\ndrag from 10,20 to 30,40\n-- this draws a line starting at the coordinates (10,20) \n-- ending at (30,40)\n\n-- Currently supported tools include:\nbrush\nbucket\npencil\nline\nrect\noval\nroundrect\ncurve\nspray\nbrowse"}, {"title": "click", "body": "\u0002times_24_biuosdce\u0002click at {x}, {y}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Use the click command for programmatically drawing pictures.\nRemember to first use the choose command to indicate what to \ndraw.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nchoose pencil tool\nclick at 10,20\n-- this draws a pixel at the coordinates x=10, y=20"}, {"title": "create", "body": "\u0002times_24_biuosdce\u0002create btn|fld\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002This feature will arrive in a future version..."}, {"title": "delete", "body": "\u0002times_24_biuosdce\u0002delete char {i} of {container}\ndelete char {i} to {j} of {container}\ndelete btn|fld\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Examples:\n\u0002monaco_9_biuosdce\u0002\nput \"abcde\" into x\ndelete char 2 of x\nanswer x -- shows \"acde\"\n\nput \"abcde\" into x\ndelete char 2 to 4 of x\nanswer x -- shows \"ae\"\n\nAs far as deleting a button or field, this feature will arrive in a \nfuture version..."}, {"title": "dial", "body": "\u0002times_24_biuosdce\u0002dial {number}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002The dial command generates touch-tone sounds for the digits in the number, through the speaker. To dial the phone from ViperCard, you must either hold the handset up to the speaker of your computer or use a device that feeds computer audio output to the telephone.\n\nNote: If you include a hypen in the number, place the entire expression in quotation marks. Otherwise, ViperCard performs a subtraction before dialing the number.\n\nThe first time the \u0002monaco_9_biuosdce\u0002dial\u0002times_12_biuosdce\u0002 command is run, the sounds might not be played because they might not have been loaded yet. Use \u0002monaco_9_biuosdce\u0002dial \"\" \u0002times_12_biuosdce\u0002 when your program starts to ensure that the sounds are loaded.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\ndial \"\" -- begin loading the dial tone sounds\nwait 4 seconds\ndial \"555-1234\""}, {"title": "disable", "body": "\u0002times_24_biuosdce\u0002disable {button}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Disables a button (sets the \"enabled\" property to true, so that the\nbutton no longer responds to clicks)."}, {"title": "divide", "body": "\u0002times_24_biuosdce\u0002divide [chunk of] {container} by {number}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Divides the number in a container by a number.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput 12 into x\ndivide x by 3\nanswer x -- will display \"4\"\n\nput \"1,12,3\" into x\ndivide item 2 of x by 3\nanswer x -- will display \"1,4,3\""}, {"title": "do", "body": "\u0002times_24_biuosdce\u0002do {expression}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Take a string, and execute it as if it were a ViperCard script.\n\nSimilar to eval() in other languages.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput \"answer \" into buildScript\nput quote & \"abc\" & quote after buildScript\ndo buildScript"}, {"title": "drag", "body": "\u0002times_24_biuosdce\u0002drag from {x1}, {y1} to {x2}, {y2}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Use the drag command for programmatically drawing pictures.\nRemember to first use the choose command to indicate what to \ndraw.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nchoose line tool\ndrag from 10,20 to 30,40\n-- this draws a line starting at the coordinates (10,20) \n-- ending at (30,40)"}, {"title": "enable", "body": "\u0002times_24_biuosdce\u0002enable {button}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Enables a button (sets the \"enabled\" property to false, so that the\nbutton is no longer disabled)."}, {"title": "exit", "body": "\u0002times_24_biuosdce\u0002exit\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Exits the current function, skipping over any subsequent lines \nof code. Similar to return, but does not return a value.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\non mouseUp\n    put cd fld \"fld1\" into x\n    if x is not a number then\n        answer \"you did not type a number\"\n        exit mouseUp\n    end if\n    put x * 2 into cd fld \"fld1\"\nend mouseUp"}, {"title": "exit repeat", "body": "\u0002times_24_biuosdce\u0002exit repeat\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Exit the current loop.\nEquivalent to \"break\" in C.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nrepeat with x = 1 to 3\n    if x == 2 then\n        break\n    end if\n    answer x\nend repeat\n-- displays 1\n-- and does not display 2 or 3"}, {"title": "get", "body": "\u0002times_24_biuosdce\u0002get {expression}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Evaluates any expression and saves the result to the variable \"it\".\n\nThe 'put' command is typically more useful.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nget 2+3\nput it into x\nanswer x -- shows 5\n\nget the width of cd btn \"myBtn\"\nput it into x\nanswer x -- shows the width of the specified button"}, {"title": "global", "body": "\u0002times_24_biuosdce\u0002global {variableName}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Indicates that a variable is a global.\n1) it can be accessed from any other script\n2) the contents are saved even after the function is complete.\nThe contents are lost when the stack is exited, however, and are not saved to disk.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nglobal currentData1, currentData2\nput \"stored 1\" into currentData1\nput \"stored 2\" into currentData2"}, {"title": "go", "body": "\u0002times_24_biuosdce\u0002go {number}\ngo {ordinal}\ngo {relativePosition}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Go to a different card.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\ngo to card 1 -- goes to first card\ngo first -- goes to first card\ngo last -- goes to last card\ngo next -- goes to the next card\ngo prev -- goes to the previous card\n\nThe following are supported:\nlast\nmiddle\nany\nfirst\nsecond\nthird\nfourth\nfifth\nsixth\nseventh\neigth\nninth\ntenth\nnext\nprevious\nthis\nmid\nprev\n\n('go back' and 'go forth' are present for backwards compatibility, but are not recommended for use in new code)"}, {"title": "hide", "body": "\u0002times_24_biuosdce\u0002hide {button|field}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Hides a button or field."}, {"title": "if/then", "body": "\u0002times_24_biuosdce\u0002if/then\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Use to run certain code based on a condition that can be true or false.\n\nIn the example\n\n\u0002monaco_9_biuosdce\u0002\nput 2 into x\nif x > 0 then\n    answer \"x is greater than 0\"\nend if\u0002times_12_biuosdce\u0002\n\nFirst, we'll check the expression \u0002monaco_9_biuosdce\u0002x > 0\u0002times_12_biuosdce\u0002. Since it evaluates to true,\nthe code inside is run. \n\nYou can also include an \"else\" section that will be run only if the expression evaluated to false.\n\n\u0002monaco_9_biuosdce\u0002if x > 0 then\n    answer \"x is greater than 0\"\nelse\n    answer \"x is not greater than 0\"\nend if\u0002times_12_biuosdce\u0002\n\nYou can chain together many different conditions with \"else if\". \n\n\u0002monaco_9_biuosdce\u0002\nput 3 into x\nif x > 3 then\n    answer \"x is greater than 3\"\nelse if x < 3 then\n    answer \"x is less than 3\"\nelse if x is 3 then\n    answer \"x is 3\"\nend if\u0002times_12_biuosdce\u0002\n\nLike in other programming languages, as soon as one of the branches\nis taken, all of the remaining branches are skipped -- even if the condition is true.\n\n\u0002monaco_9_biuosdce\u0002\nif 3+3 is 6 then\n    answer \"aaa\"\nelse if 2+2 is 4 then\n    -- this not run, even though the expression is true\n    answer \"bbb\"\nend if\n\u0002times_12_biuosdce\u0002\n\nFor backwards compatibility, we support single-line if statements but do not recommend this style for new code."}, {"title": "lock screen", "body": "\u0002times_24_biuosdce\u0002lock screen\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002This feature will arrive in a future version..."}, {"title": "multiply", "body": "\u0002times_24_biuosdce\u0002multiply [chunk of] {container} by {number}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Multiplies the number in a container by a number.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput 12 into x\nmultiply x by 3\nanswer x -- will display \"36\"\n\nput \"1,12,3\" into x\nmultiply item 2 of x by 3\nanswer x -- will display \"1,36,3\""}, {"title": "next repeat", "body": "\u0002times_24_biuosdce\u0002next repeat\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Inside a loop, go back to the top of the loop, skipping the next \nline(s) of code. Equivalent to \"continue\" in C.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nrepeat with x = 1 to 3\n    if x == 2 then\n        next repeat\n    end if\n    answer x\nend repeat\n-- displays 1\n-- displays 3\n-- and does not display 2"}, {"title": "pass", "body": "\u0002times_24_biuosdce\u0002pass\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Exits the current function and calls a function higher in the\nmessage hierarchy. For example, if a button has the script\n\u0002monaco_9_biuosdce\u0002on mouseUp\n    answer \"button handling the event\"\nend mouseUp\nand the current card has the script\non mouseUp\n    answer \"card handling the event\"\nend mouseUp\u0002times_12_biuosdce\u0002\nand the button is clicked,\nonly the button's code will be run.\n\nIf you want both to be run, you can use the pass command.\nIf a button has the script\n\u0002monaco_9_biuosdce\u0002on mouseUp\n    answer \"button handling the event\"\n    pass mouseUp\n    -- any code here will be skipped\nend mouseUp\u0002times_12_biuosdce\u0002\nand the current card has the script\n\u0002monaco_9_biuosdce\u0002on mouseUp\n    answer \"card handling the event\"\nend mouseUp\u0002times_12_biuosdce\u0002\nand the button is clicked,\nboth will be run."}, {"title": "play", "body": "\u0002times_24_biuosdce\u0002play\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Play a sound effect.\n\nFor example, to play a chime sound,\n\n\u0002monaco_9_biuosdce\u0002play \"glider_1_Extra\" load\nwait 4 seconds\nplay \"glider_1_Extra\"\u0002times_12_biuosdce\u0002\n\nYou should load the sounds you will use in advance,\nsuch as in a game initialize() routine,\nso that when you play them, there will not be a delay.\n\nViperCard can play the following sounds:\n\n\u0002monaco_9_biuosdce\u0002glider_1_Aww\nglider_1_Bass\nglider_1_BeamIn\nglider_1_BlowerOn\nglider_1_Bounce\nglider_1_Clock\nglider_1_Crunch\nglider_1_Drip\nglider_1_Energize\nglider_1_Extra\nglider_1_FireBand\nglider_1_GetBand\nglider_1_GoodMove\nglider_1_GreaseFall\nglider_1_Guitar\nglider_1_Hey!\nglider_1_Lightning\nglider_1_LightsOn\nglider_1_Pop\nglider_1_Push\nglider_1_Shredder\nglider_1_Tick\nglider_1_ToastDrop\nglider_1_ToastJump\nglider_1_Yow!\nglider_1_Zap\u0002times_12_biuosdce\u0002"}, {"title": "put", "body": "\u0002times_24_biuosdce\u0002put {expression} into {container}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Evaluates any expression and saves the result to a variable or \ncontainer.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput 2+3 into x\nanswer x -- shows 5\n\nput \"hello\" into cd fld \"message\"\n\nput \"aa,bb,cc\" into x\nput \"11\" into item 2 of x\nanswer x -- shows \"aa,11,cc\"\n\nput \"abc\" into x\nput \"q\" into char 2 of x\nanswer x -- shows \"aqc\"\n\nput \"appended text\" after x\nput \"prepended text\" before x\n\n-- if the message box is open, you can display the contents of a variable into the message box,\n-- this is similar to \"print\" or \"writeline\" in other languages.\nput 2+3 into x\nput x into the msg box"}, {"title": "repeat", "body": "\u0002times_24_biuosdce\u0002repeat\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Use to create a loop.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nrepeat with x = 1 to 5\n    answer \"x is now\" & x\nend repeat\n\nrepeat with x = 5 down to 1\n    answer \"x is now\" & x\nend repeat\n\nrepeat 3 times\n    answer \"hi\"\nend repeat\n\nrepeat forever\n    answer \"this is an infinite loop\"\nend repeat\n\nput 0 into counter\nrepeat forever\n    answer \"but not this\"\n    add 1 to counter\n    if counter > 3 then\n        exit repeat\n    end if\nend repeat\n\nput 0 into counter\nrepeat until counter > 3\n    add 1 to counter\nend repeat\n\nput 0 into counter\nrepeat while counter <= 3\n    add 1 to counter\nend repeat"}, {"title": "replace", "body": "\u0002times_24_biuosdce\u0002replace {string} with {string} in {container}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Replace all occurrences of a string.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002put \"a-b-c\" into x\nreplace \"-\" with \"_\" in x\nanswer x -- shows a_b_c\n\n\n-- you can also use replace in a field.\nput \"-\" into search\nput \"_\" into replacement\nreplace search with replacement in cd fld \"myFld\""}, {"title": "return", "body": "\u0002times_24_biuosdce\u0002return {expression}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002return a value from the current function.\nNote: no lines of code after the return statement will be run.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nfunction myAddition p1, p2\n    return p1 + p2\n    answer \"this line will never be reached\"\nend myAddition\non mouseUp\n    put myAddition(1,2) into x\nend mouseUp"}, {"title": "send", "body": "\u0002times_24_biuosdce\u0002send {expression} to {object}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Take a string, and execute it as if it were a ViperCard script in the context of an object.\n\nMessages in ViperCard automatically travel upwards from button to card, background, and then stack.\n\nBut by using the 'send' command, you can send a message to any target -- from a card down to a button, from one card to a different card, and so on. One case where this is helpful is if you have a large amount of code in one script: subroutines can be moved to other objects and called via send.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\n-- sending a message to a different card\nsend \"prepareNextCard\" to card \"otherCard\"\n\n-- simulate a button click\nsend \"mouseUp\" to cd btn \"myButton\"\n\n-- if you have hundreds of lines of code in one script, this\n-- can feel disorganized. with \"send\" you can store code\n-- in other objects, for example, moving\n-- mathematical computation to a different card or button.\n-- in the script of cd btn \"mathUtils\" of card \"otherCard\", write\non myCompute a, b\n    return a * a + b\nend myCompute\n\n-- from another script\nsend \"myCompute 3, 4\" to cd btn \"mathUtils\" of card \"otherCard\"\nput the result into x"}, {"title": "set", "body": "\u0002times_24_biuosdce\u0002set the {property} of {button|field} to {value}\nset the {property} to {value}\nset the {chunkproperty} of {chunk} of {field} to {value}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Use the set command to change a property.\n\nSome example properties:\n\n\u0002monaco_9_biuosdce\u0002set the width of cd btn \"myButton\" to 100\nset the topLeft of cd btn \"myButton\" to 24, 25\nput the long name of btn \"myButton\" into x\nset the textsize of char 2 to 4 of cd fld \"myFld\" to 18 \nset the itemdelimiter to \"|\"\u0002times_12_biuosdce\u0002\n\nSee the \"Properties\" section of documentation for more."}, {"title": "show", "body": "\u0002times_24_biuosdce\u0002show {button|field}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Shows a button or field."}, {"title": "sort", "body": "\u0002times_24_biuosdce\u0002sort [lines|items|chars] of {container}\nsort descending [lines|items|chars] of {container}\nsort [lines|items|chars] of {container} [numeric|text|international]\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Sort styles:\nFor text sorting (default), compares text, not case sensitive.\nFor numeric sorting, interpret as numbers, e.g. 10 sorts after 2.\nFor international sorting, compares text using current locale.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput \"aa,cc,bb\" into x\nsort items of x\nanswer x -- displays \"aa,bb,cc\""}, {"title": "subtract", "body": "\u0002times_24_biuosdce\u0002subtract [chunk of] {container} from {number}\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Subtracts a number from the number in a container.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nput 12 into x\nsubtract 3 from x\nanswer x -- will display \"9\"\n\nput \"1,12,3\" into x\nsubtract 3 from item 2 of x\nanswer x -- will display \"1,9,3\""}, {"title": "unlock screen", "body": "\u0002times_24_biuosdce\u0002unlock screen\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002This feature will arrive in a future version..."}, {"title": "wait", "body": "\u0002times_24_biuosdce\u0002wait {number} [seconds|milliseconds|ms|ticks]\n\n\u0002times_12_biuosdce\u0002\u0002times_12_biuosdce\u0002Pauses the script.\n\nExamples:\n\u0002monaco_9_biuosdce\u0002\nwait 500 ms -- pauses for half a second.\n\n(A paused script can be terminated by clicking the Stop icon in the\nnavigation palette, or by changing to the button or field tool.)"}]}
